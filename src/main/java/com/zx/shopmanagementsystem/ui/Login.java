/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.zx.shopmanagementsystem.ui;

import com.zx.shopmanagementsystem.dbconnection.JDBC;
import com.zx.shopmanagementsystem.assests.Func;
import com.zx.shopmanagementsystem.assests.IconLocation;
import com.zx.shopmanagementsystem.components.SplashPanal;
import com.zx.shopmanagementsystem.notifications.MessageDialog;
import java.awt.Toolkit;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Properties;
import org.json.JSONObject;

/**
 *
 * @author User
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        setIconImage(Toolkit.getDefaultToolkit().getImage(il.logo));
        head1.setOpaque(false);
        //head1.setHeaderTitle("Login");
        head1.setFrame(Login.this);

    }

    JDBC DB = new JDBC();
    Func func = new Func();
    IconLocation il = new IconLocation();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        showPasswordLbl = new javax.swing.JLabel();
        loginLbl = new javax.swing.JLabel();
        forgotPasswordLbl = new javax.swing.JLabel();
        usernameTxt = new com.zx.shopmanagementsystem.components.RoundedText();
        passwordTxt = new com.zx.shopmanagementsystem.components.RoundedPassword();
        head1 = new com.zx.shopmanagementsystem.components.Head();
        iconLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1366, 768));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        showPasswordLbl.setIcon(new javax.swing.ImageIcon("C:\\ShopManagementSystem\\src\\main\\java\\com\\zx\\shopmanagementsystem\\icons\\HidePassword.png")); // NOI18N
        showPasswordLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        showPasswordLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showPasswordLblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                showPasswordLblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                showPasswordLblMouseExited(evt);
            }
        });
        getContentPane().add(showPasswordLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 437, -1, 30));

        loginLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginLblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                loginLblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                loginLblMouseExited(evt);
            }
        });
        getContentPane().add(loginLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(155, 510, 370, 40));

        forgotPasswordLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        forgotPasswordLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                forgotPasswordLblMouseClicked(evt);
            }
        });
        getContentPane().add(forgotPasswordLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 490, 100, 20));

        usernameTxt.setFont(new java.awt.Font("Poppins Medium", 0, 13)); // NOI18N
        usernameTxt.setHintText("Enter Username");
        getContentPane().add(usernameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 350, 380, 45));

        passwordTxt.setFont(new java.awt.Font("Poppins Medium", 0, 13)); // NOI18N
        getContentPane().add(passwordTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 430, 380, 45));

        head1.setHeaderTextColor("#FFFFFF");
        head1.setHeaderTitle("");
        head1.setOpaque(false);
        getContentPane().add(head1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, -1));

        iconLbl.setIcon(new javax.swing.ImageIcon("C:\\ShopManagementSystem\\src\\main\\java\\com\\zx\\shopmanagementsystem\\images\\User_Login.png")); // NOI18N
        getContentPane().add(iconLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void loginLblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginLblMouseEntered
        // TODO add your handling code here:
        //func.iconSetter(loginLbl, il.LoginWhiteIcon);
    }//GEN-LAST:event_loginLblMouseEntered

    private void loginLblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginLblMouseExited
        // TODO add your handling code here:
        //func.iconSetter(loginLbl, il.LoginPurpleIcon);
    }//GEN-LAST:event_loginLblMouseExited

    private void forgotPasswordLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_forgotPasswordLblMouseClicked
        // TODO add your handling code here:
        ForgotPassword fp = new ForgotPassword();
        Login.this.dispose();
        fp.setVisible(true);

    }//GEN-LAST:event_forgotPasswordLblMouseClicked

    private void loginLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginLblMouseClicked
        // TODO add your handling code here:
        login();
    }//GEN-LAST:event_loginLblMouseClicked

    private void showPasswordLblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showPasswordLblMouseEntered
        // TODO add your handling code here:

    }//GEN-LAST:event_showPasswordLblMouseEntered

    private void showPasswordLblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showPasswordLblMouseExited
        // TODO add your handling code here:

    }//GEN-LAST:event_showPasswordLblMouseExited

    private void showPasswordLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showPasswordLblMouseClicked
        // TODO add your handling code here:
        func.mouseClicked(showPasswordLbl, passwordTxt);
    }//GEN-LAST:event_showPasswordLblMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);

            }
        });
    }

    private void login() {
        MessageDialog DialogBox = new MessageDialog(this);
        String username = usernameTxt.getText();
        String password = passwordTxt.getText();

        if (username.equals("") && password.equals("")) {
            System.out.println("All Text Empty");
            DialogBox.showMessage("WARNING!!!", "All Text Empty", 2);

            //JOptionPane.showMessageDialog(rootPane, "All Text Empty", "Empty Text", JOptionPane.WARNING_MESSAGE);
        } else if (username.equals("")) {
            System.out.println("Username Empty");
            DialogBox.showMessage("WARNING!!!", "Username Empty", 2);
            //JOptionPane.showMessageDialog(rootPane, "Username Empty", "Empty Username", JOptionPane.WARNING_MESSAGE);
        } else if (password.equals("")) {
            System.out.println("Password Empty");
            DialogBox.showMessage("WARNING!!!", "Password Empty", 2);
            //JOptionPane.showMessageDialog(rootPane, "Password Empty", "Empty Password", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                java.sql.ResultSet rs = DB.getdata("SELECT * FROM user WHERE user_name = '" + username + "' && password = '" + password + "' ");
                if (rs.next()) {
                    System.out.println("Result Set Not Empty : Login");
                    while (true) {
                        System.out.println("While Running");
                        int userRoleId = rs.getInt("user_role_id");
                        int userID = rs.getInt("user_id");
                        save(userID);

                        if (userRoleId == 1) {
                            Login.this.dispose();
                            new SplashPanal(null, true).setVisible(true);
                            DashboardAdmin dashboardAdmin = new DashboardAdmin();
                            //dashboardAdmin.getUserId(userID);
                            dashboardAdmin.setVisible(true);
                            break;
                        } else {
                            Login.this.dispose();
                            new SplashPanal(null, true).setVisible(true);
                            DashboardUser dashboardUser = new DashboardUser();
                            dashboardUser.setVisible(true);
                            break;
                        }
                    }
                } else {
                    System.out.println("Result Set Empty : Login");
                    DialogBox.showMessage("ERROR!!!", "User Not Found", 3);
                    //JOptionPane.showMessageDialog(rootPane, "User Not Found", "WARNING!!!", JOptionPane.WARNING_MESSAGE);
                }

            } catch (Exception ex) {
                System.out.println("Result set try catch : Login" + ex);
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel forgotPasswordLbl;
    private com.zx.shopmanagementsystem.components.Head head1;
    private javax.swing.JLabel iconLbl;
    private javax.swing.JLabel loginLbl;
    private com.zx.shopmanagementsystem.components.RoundedPassword passwordTxt;
    private javax.swing.JLabel showPasswordLbl;
    private com.zx.shopmanagementsystem.components.RoundedText usernameTxt;
    // End of variables declaration//GEN-END:variables

    private void save(int UserID) {
        // Create a JSON object
        JSONObject jsonObject = new JSONObject();

        // Add strings to the JSON object
        jsonObject.put("UserID", UserID);  // New value for key1

        // Convert JSON object to Properties
        Properties properties = new Properties();
        jsonObject.toMap().forEach((key, value) -> properties.setProperty(key.toString(), value.toString()));

        // Save Properties to a file
        try (FileOutputStream fileOutputStream = new FileOutputStream("user.properties")) {
            properties.store(fileOutputStream, "user");
            System.out.println("user saved successfully.");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
