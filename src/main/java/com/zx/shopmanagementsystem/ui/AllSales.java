/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.zx.shopmanagementsystem.ui;

import com.zx.shopmanagementsystem.assests.IconLocation;
import com.zx.shopmanagementsystem.dbconnection.JDBC;
import com.zx.shopmanagementsystem.table.TableCustom;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class AllSales extends javax.swing.JFrame {

    /**
     * Creates new form LowStock
     */
    JDBC DB = new JDBC();
    IconLocation il = new IconLocation();

    public AllSales(int value) {
        initComponents();
        combo.setSelectedIndex(value);
        if (value == 0) {
            daily();
        } else {
            monthly();
        }
        setIconImage(Toolkit.getDefaultToolkit().getImage(il.logo));
        TableCustom.apply(jScrollPane1, TableCustom.TableType.MULTI_LINE);
        head1.setFrame(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        combo = new com.zx.shopmanagementsystem.components.ComboBoxSuggestion();
        head1 = new com.zx.shopmanagementsystem.components.Head();
        jScrollPane1 = new javax.swing.JScrollPane();
        allSalesTbl = new javax.swing.JTable();
        iconLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        combo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Daily", "Monthly" }));
        combo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        combo.setMinimumSize(new java.awt.Dimension(185, 50));
        combo.setPreferredSize(new java.awt.Dimension(185, 50));
        combo.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                comboPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboActionPerformed(evt);
            }
        });
        getContentPane().add(combo, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 48, 240, 40));

        head1.setHeaderTitle("");
        head1.setOpaque(false);
        getContentPane().add(head1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, -1));

        allSalesTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "No", "Product Name", "Sold Quantity", "Total Sale", "Total Profit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(allSalesTbl);
        if (allSalesTbl.getColumnModel().getColumnCount() > 0) {
            allSalesTbl.getColumnModel().getColumn(0).setPreferredWidth(5);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, 1180, 520));

        iconLbl.setIcon(new javax.swing.ImageIcon("C:\\ShopManagementSystem\\src\\main\\java\\com\\zx\\shopmanagementsystem\\images\\All Sales.png")); // NOI18N
        getContentPane().add(iconLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void comboPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_comboPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        String value = (String) (combo.getSelectedItem());
        if (value.equals("Daily")) {
            System.out.println("1");
            daily();
        } else {
            System.out.println("2");
            monthly();
        }
    }//GEN-LAST:event_comboPopupMenuWillBecomeInvisible

    private void comboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllSales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllSales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllSales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllSales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AllSales(0).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable allSalesTbl;
    private com.zx.shopmanagementsystem.components.ComboBoxSuggestion combo;
    private com.zx.shopmanagementsystem.components.Head head1;
    private javax.swing.JLabel iconLbl;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private void daily() {
        tableDataClear();
        String sql = "SELECT\n"
                + "    p.product_name,\n"
                + "    SUM(s.quantity) AS total_quantity,\n"
                + "    SUM(s.price * s.quantity) AS total_sales_price,\n"
                + "    SUM((s.price - p.reciving_price) * s.quantity) AS total_profit\n"
                + "FROM shopdb.sold_items s\n"
                + "JOIN shopdb.product p ON s.product_id = p.product_id\n"
                + "WHERE s.date = CURRENT_DATE\n"
                + "GROUP BY s.product_id, p.product_name;";

        String product_name;
        String total_quantity;
        String total_sales_price;
        String total_profit;

        ResultSet rs;
        try {
            rs = DB.getdata(sql);
            while (rs.next()) {
                product_name = rs.getString("product_name");
                total_quantity = rs.getString("total_quantity");
                total_sales_price = rs.getString("total_sales_price");
                total_profit = rs.getString("total_profit");

                DefaultTableModel table = (DefaultTableModel) allSalesTbl.getModel();
                table.addRow(new Object[]{table.getRowCount() + 1, product_name, total_quantity, total_sales_price, total_profit});
                DB.con().close();
            }
        } catch (Exception ex) {
            Logger.getLogger(AllSales.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void monthly() {
        tableDataClear();
        String sql = "SELECT\n"
                + "    p.product_name,\n"
                + "    SUM(s.quantity) AS total_quantity,\n"
                + "    SUM(s.price * s.quantity) AS total_sales_price,\n"
                + "    SUM((s.price - p.reciving_price) * s.quantity) AS total_profit\n"
                + "FROM shopdb.sold_items s\n"
                + "JOIN shopdb.product p ON s.product_id = p.product_id\n"
                + "WHERE MONTH(s.date) = MONTH(CURRENT_DATE) AND YEAR(s.date) = YEAR(CURRENT_DATE)\n"
                + "GROUP BY s.product_id, p.product_name;";

        String product_name;
        String total_quantity;
        String total_sales_price;
        String total_profit;

        ResultSet rs;
        try {
            rs = DB.getdata(sql);
            while (rs.next()) {
                product_name = rs.getString("product_name");
                total_quantity = rs.getString("total_quantity");
                total_sales_price = rs.getString("total_sales_price");
                total_profit = rs.getString("total_profit");

                DefaultTableModel table = (DefaultTableModel) allSalesTbl.getModel();
                table.addRow(new Object[]{table.getRowCount() + 1, product_name, total_quantity, total_sales_price, total_profit});
                DB.con().close();
            }
        } catch (Exception ex) {
            Logger.getLogger(AllSales.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void tableDataClear() {
        try {
            while (0 <= allSalesTbl.getRowCount()) {
                DefaultTableModel table = (DefaultTableModel) allSalesTbl.getModel();
                table.removeRow(allSalesTbl.getRowCount() - 1);
            }
        } catch (Exception e) {
            System.out.println("Expire Date Table Data Clear : " + e);
        }
    }
}
