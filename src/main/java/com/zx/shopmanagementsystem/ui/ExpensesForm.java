/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.zx.shopmanagementsystem.ui;

import com.zx.shopmanagementsystem.assests.IconLocation;
import com.zx.shopmanagementsystem.dbconnection.JDBC;
import com.zx.shopmanagementsystem.forms.Expenses;
import com.zx.shopmanagementsystem.notifications.ConfirmDialog;
import com.zx.shopmanagementsystem.notifications.MessageDialog;
import java.awt.Toolkit;
import java.io.FileInputStream;
import java.sql.ResultSet;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;
import javax.swing.text.PlainDocument;

/**
 *
 * @author aruna
 */
public class ExpensesForm extends javax.swing.JFrame {

    /**
     * Creates new form Expenses
     */
    JDBC DB = new JDBC();
    ArrayList<Integer> categoryIdArray = new ArrayList<>();
    ArrayList<Integer> paymentMethodIdArray = new ArrayList<>();
    ArrayList<Integer> supplierIdArray = new ArrayList<>();
    ArrayList<Integer> userIdArray = new ArrayList<>();
    private int UseriD;
    private Expenses expenses;
    IconLocation il = new IconLocation();

    public ExpensesForm(Expenses expenses) {
        this.expenses = expenses;
        initComponents();
        head2.setFrame(this);
        categoryComboLoader();
        paymentMethodComboLoader();
        onlyNumbers(expensesAmountTxt);
        vendorCombo.addItem("No Action");
        jsonRead();
        setIconImage(Toolkit.getDefaultToolkit().getImage(il.logo));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooser1 = new com.zx.shopmanagementsystem.dateChooser.DateChooser();
        head2 = new com.zx.shopmanagementsystem.components.Head();
        expensesAmountTxt = new com.zx.shopmanagementsystem.components.RoundedText();
        expensesDateTxt = new com.zx.shopmanagementsystem.components.RoundedText();
        vendorCombo = new com.zx.shopmanagementsystem.components.ComboBoxSuggestion();
        paymentMethodCombo = new com.zx.shopmanagementsystem.components.ComboBoxSuggestion();
        expensesCategoryCombo = new com.zx.shopmanagementsystem.components.ComboBoxSuggestion();
        saveBtnLbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTxt = new javax.swing.JTextPane();
        iconLbl = new javax.swing.JLabel();

        dateChooser1.setForeground(new java.awt.Color(0, 51, 204));
        dateChooser1.setDateFormat("yyyy-MM-dd");
        dateChooser1.setTextRefernce(expensesDateTxt);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        head2.setOpaque(false);
        getContentPane().add(head2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1130, -1));

        expensesAmountTxt.setFont(new java.awt.Font("Poppins SemiBold", 1, 13)); // NOI18N
        expensesAmountTxt.setHintText("Enter Amount");
        getContentPane().add(expensesAmountTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 220, 260, 40));

        expensesDateTxt.setFont(new java.awt.Font("Poppins SemiBold", 1, 13)); // NOI18N
        expensesDateTxt.setHintText("Enter Date");
        getContentPane().add(expensesDateTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, 260, 40));

        vendorCombo.setFont(new java.awt.Font("Poppins SemiBold", 1, 13)); // NOI18N
        getContentPane().add(vendorCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 420, 260, 40));

        paymentMethodCombo.setFont(new java.awt.Font("Poppins SemiBold", 1, 13)); // NOI18N
        getContentPane().add(paymentMethodCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 330, 260, 40));

        expensesCategoryCombo.setFont(new java.awt.Font("Poppins SemiBold", 1, 13)); // NOI18N
        expensesCategoryCombo.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                expensesCategoryComboPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        getContentPane().add(expensesCategoryCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 330, 260, 40));

        saveBtnLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveBtnLblMouseClicked(evt);
            }
        });
        getContentPane().add(saveBtnLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 600, 200, 50));

        descriptionTxt.setFont(new java.awt.Font("Poppins SemiBold", 1, 13)); // NOI18N
        descriptionTxt.setSelectionColor(new java.awt.Color(42, 44, 116));
        jScrollPane1.setViewportView(descriptionTxt);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 420, 260, 170));

        iconLbl.setIcon(new javax.swing.ImageIcon("C:\\ShopManagementSystem\\src\\main\\java\\com\\zx\\shopmanagementsystem\\images\\ExpensesForm.png")); // NOI18N
        getContentPane().add(iconLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void expensesCategoryComboPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_expensesCategoryComboPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (expensesCategoryCombo.getSelectedItem().equals("Supplies")) {
            System.out.println("Supplies");
            supplierComboLoader();
        } else if (expensesCategoryCombo.getSelectedItem().equals("Salaries")) {
            System.out.println("Salaries");
            userComboLoader();
        } else {
            vendorCombo.removeAllItems();
            vendorCombo.addItem("No Action");
        }
    }//GEN-LAST:event_expensesCategoryComboPopupMenuWillBecomeInvisible

    private void saveBtnLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveBtnLblMouseClicked
        // TODO add your handling code here:
        ConfirmDialog confrim = new ConfirmDialog(this);
        confrim.showMessage("Save", "Do you want to Add ?");
        if (confrim.getMessageType() == ConfirmDialog.MessageType.YES) {
            save();
            expenses.setTable();
        } else {
            System.out.println("No");
        }
    }//GEN-LAST:event_saveBtnLblMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExpensesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExpensesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExpensesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExpensesForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        Expenses cm = new Expenses();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ExpensesForm cr = new ExpensesForm(cm);
                cr.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.zx.shopmanagementsystem.dateChooser.DateChooser dateChooser1;
    private javax.swing.JTextPane descriptionTxt;
    private com.zx.shopmanagementsystem.components.RoundedText expensesAmountTxt;
    private com.zx.shopmanagementsystem.components.ComboBoxSuggestion expensesCategoryCombo;
    private com.zx.shopmanagementsystem.components.RoundedText expensesDateTxt;
    private com.zx.shopmanagementsystem.components.Head head2;
    private javax.swing.JLabel iconLbl;
    private javax.swing.JScrollPane jScrollPane1;
    private com.zx.shopmanagementsystem.components.ComboBoxSuggestion paymentMethodCombo;
    private javax.swing.JLabel saveBtnLbl;
    private com.zx.shopmanagementsystem.components.ComboBoxSuggestion vendorCombo;
    // End of variables declaration//GEN-END:variables

    private void categoryComboLoader() {
        String sql = "SELECT * FROM expense_category";

        try {
            ResultSet rs = DB.getdata(sql);
            while (rs.next()) {
                categoryIdArray.add(rs.getInt("expenses_category_id"));
                expensesCategoryCombo.addItem(rs.getString("category_name"));
            }
        } catch (Exception ex) {
            Logger.getLogger(ExpensesForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void paymentMethodComboLoader() {
        String sql = "SELECT * FROM payment_method";

        try {
            ResultSet rs = DB.getdata(sql);
            while (rs.next()) {
                paymentMethodIdArray.add(rs.getInt("payment_method_id"));
                paymentMethodCombo.addItem(rs.getString("payment_method_type"));
            }
        } catch (Exception ex) {
            Logger.getLogger(ExpensesForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void supplierComboLoader() {
        String sql = "SELECT * FROM supplier";
        vendorCombo.removeAllItems();

        try {
            ResultSet rs = DB.getdata(sql);
            while (rs.next()) {
                supplierIdArray.add(rs.getInt("supplier_id"));
                vendorCombo.addItem(rs.getString("supplier_name"));
            }
        } catch (Exception ex) {
            Logger.getLogger(ExpensesForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void userComboLoader() {
        String sql = "SELECT * FROM user";
        vendorCombo.removeAllItems();

        try {
            ResultSet rs = DB.getdata(sql);
            while (rs.next()) {
                userIdArray.add(rs.getInt("user_id"));
                vendorCombo.addItem(rs.getString("user_name"));
            }
        } catch (Exception ex) {
            Logger.getLogger(ExpensesForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void onlyNumbers(com.zx.shopmanagementsystem.components.RoundedText text) {
        PlainDocument doc = (PlainDocument) text.getDocument();
        doc.setDocumentFilter(new DocumentFilter() {
            private final Pattern pattern = Pattern.compile("\\d*\\.?\\d*");

            @Override
            public void insertString(DocumentFilter.FilterBypass fb, int offset, String string, AttributeSet attr) throws BadLocationException {
                Matcher matcher = pattern.matcher(string);
                if (!matcher.matches()) {
                    return;
                }
                super.insertString(fb, offset, string, attr);
            }

            @Override
            public void replace(DocumentFilter.FilterBypass fb, int offset, int length, String text, AttributeSet attrs) throws BadLocationException {
                Matcher matcher = pattern.matcher(text);
                if (!matcher.matches()) {
                    return;
                }
                super.replace(fb, offset, length, text, attrs);
            }
        });
    }

    private void save() {
        MessageDialog DialogBox = new MessageDialog(this);
        if (descriptionTxt.getText().equals("")) {
            DialogBox.showMessage("WARNING !!!", "Description is Empty", 2);
        } else if (expensesAmountTxt.getText().equals("")) {
            DialogBox.showMessage("WARNING!!!", "Please Enter Expenses Amount", 2);
        } else {
            //if (vendorCombo.getSelectedItem().equals("No Action")) {
            try {
                DB.putdata("INSERT INTO expenses (expenses_date, expenses_category_id, expenses_description, expenses_amount, payment_method, vendor_supplier, user_id) VALUES"
                        + "('" + expensesDateTxt.getText() + "','" + categoryIdArray.get(expensesCategoryCombo.getSelectedIndex()) + "',"
                        + "'" + descriptionTxt.getText() + "','" + expensesAmountTxt.getText() + "','" + paymentMethodIdArray.get(paymentMethodCombo.getSelectedIndex()) + "',"
                        + "'" + vendorCombo.getSelectedItem() + "','" + UseriD + "')");
                DialogBox.showMessage("Done!!!", "Saved Successfully", 1);
            } catch (Exception ex) {
                Logger.getLogger(ExpensesForm.class.getName()).log(Level.SEVERE, null, ex);
            }
            //}

            clear();
        }
    }

    private void jsonRead() {
        Properties properties = new Properties();

        // Load properties from the file
        try (FileInputStream fileInputStream = new FileInputStream("user.properties")) {
            properties.load(fileInputStream);
            System.out.println("user loaded successfully -> Expenses From.");

            // Access individual properties
            UseriD = Integer.parseInt(properties.getProperty("UserID"));

            System.out.println("User ID Expenses Form : " + UseriD);

        } catch (Exception eb) {
            System.err.println("User ID Expenses Form : " + eb);
        }
    }

    private void clear() {
        dateChooser1.toDay();
        expensesCategoryCombo.setSelectedIndex(0);
        descriptionTxt.setText("");
        expensesAmountTxt.setText("");
        paymentMethodCombo.setSelectedIndex(0);
        vendorCombo.addItem("No Action");
    }
}
