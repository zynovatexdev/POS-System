/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.zx.shopmanagementsystem.ui;

import com.zx.shopmanagementsystem.assests.Func;
import com.zx.shopmanagementsystem.assests.IconLocation;
import com.zx.shopmanagementsystem.dbconnection.JDBC;
import com.zx.shopmanagementsystem.notifications.DialogBox;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.control.Alert;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author User
 */
public class UserRegistration extends javax.swing.JFrame {

    /**
     * Creates new form UserRegistration
     */
    Func func = new Func();
    IconLocation il = new IconLocation();
    JDBC DB = new JDBC();
    DialogBox notification = new DialogBox();

    String path = il.profileIcon;
    File file = null;
    InputStream profilePicture = null;
    int userRoleId;

    public UserRegistration() {
        initComponents();
        head1.setFrame(UserRegistration.this);
        func.iconSetter(profileImageLbl, path);
        comboLoader();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fullNameTxt = new com.zx.shopmanagementsystem.components.RoundedText();
        usernameTxt1 = new com.zx.shopmanagementsystem.components.RoundedText();
        hidePasswordLblBtn = new javax.swing.JLabel();
        passwordTxt = new com.zx.shopmanagementsystem.components.RoundedPassword();
        userRoleCombo = new javax.swing.JComboBox<>();
        head1 = new com.zx.shopmanagementsystem.components.Head();
        jLabel1 = new javax.swing.JLabel();
        profilePicBtn = new javax.swing.JLabel();
        profileImageLbl = new javax.swing.JLabel();
        registerBtnLbl = new javax.swing.JLabel();
        iconLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        fullNameTxt.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        fullNameTxt.setHintText("Enter your full name ");
        getContentPane().add(fullNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 370, 480, 50));

        usernameTxt1.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        usernameTxt1.setHintText("Enter your username\n");
        getContentPane().add(usernameTxt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 160, 480, 50));

        hidePasswordLblBtn.setIcon(new javax.swing.ImageIcon("C:\\ShopManagementSystem\\src\\main\\java\\com\\zx\\shopmanagementsystem\\icons\\HidePassword.png")); // NOI18N
        hidePasswordLblBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hidePasswordLblBtnMouseClicked(evt);
            }
        });
        getContentPane().add(hidePasswordLblBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 278, 35, 30));

        passwordTxt.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        passwordTxt.setHintText("Enter your password");
        getContentPane().add(passwordTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 268, 480, 50));

        userRoleCombo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        userRoleCombo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(userRoleCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 480, 250, 50));

        head1.setHeaderTitle("User Registratrion");
        head1.setOpaque(false);
        getContentPane().add(head1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1360, -1));

        jLabel1.setFont(new java.awt.Font("Noto Sans Light", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Upload Profile Picture");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(785, 560, 250, 40));

        profilePicBtn.setFont(new java.awt.Font("Noto Sans Light", 1, 18)); // NOI18N
        profilePicBtn.setForeground(new java.awt.Color(255, 255, 255));
        profilePicBtn.setIcon(new javax.swing.ImageIcon("C:\\ShopManagementSystem\\src\\main\\java\\com\\zx\\shopmanagementsystem\\icons\\Upload_Purple.png")); // NOI18N
        profilePicBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        profilePicBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                profilePicBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                profilePicBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                profilePicBtnMouseExited(evt);
            }
        });
        getContentPane().add(profilePicBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 560, 200, 40));
        getContentPane().add(profileImageLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 430, 100, 120));

        registerBtnLbl.setIcon(new javax.swing.ImageIcon("C:\\ShopManagementSystem\\src\\main\\java\\com\\zx\\shopmanagementsystem\\icons\\RegisterPurpleIcon.png")); // NOI18N
        registerBtnLbl.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        registerBtnLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registerBtnLblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                registerBtnLblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                registerBtnLblMouseExited(evt);
            }
        });
        getContentPane().add(registerBtnLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 650, 450, 58));

        iconLbl.setIcon(new javax.swing.ImageIcon("C:\\ShopManagementSystem\\src\\main\\java\\com\\zx\\shopmanagementsystem\\images\\User_Registration.png")); // NOI18N
        getContentPane().add(iconLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
        iconLbl.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void profilePicBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profilePicBtnMouseEntered
        // TODO add your handling code here:
        func.iconSetter(profilePicBtn, il.uploadWhiteIcon);
    }//GEN-LAST:event_profilePicBtnMouseEntered

    private void profilePicBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profilePicBtnMouseExited
        // TODO add your handling code here:
        func.iconSetter(profilePicBtn, il.uploadPurpleIcon);
    }//GEN-LAST:event_profilePicBtnMouseExited

    private void profilePicBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_profilePicBtnMouseClicked
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();

        // Create a file filter for image files (e.g., jpg, png, gif)
        FileNameExtensionFilter imageFilter = new FileNameExtensionFilter("Image Files", "jpg", "jpeg", "png", "gif");

        // Set the file filter on the chooser
        chooser.setFileFilter(imageFilter);

        int result = chooser.showOpenDialog(null);

        if (result == JFileChooser.APPROVE_OPTION) {
            file = chooser.getSelectedFile();
            path = file.getAbsolutePath();

            // Load the selected image and display it
            try {
                ImageIcon icon = new ImageIcon(path);
                Image img = icon.getImage().getScaledInstance(100, 120, Image.SCALE_SMOOTH);
                ImageIcon scaledIcon = new ImageIcon(img);
                profileImageLbl.setIcon(scaledIcon);
            } catch (Exception exx) {
                System.out.println("Profile Pic select : " + exx.getMessage());
            }
        }
    }//GEN-LAST:event_profilePicBtnMouseClicked

    private void registerBtnLblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerBtnLblMouseEntered
        // TODO add your handling code here:
        func.iconSetter(registerBtnLbl, il.RegisterWhiteIcon);
    }//GEN-LAST:event_registerBtnLblMouseEntered

    private void registerBtnLblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerBtnLblMouseExited
        // TODO add your handling code here:
        func.iconSetter(registerBtnLbl, il.RegisterPurpleIcon);
    }//GEN-LAST:event_registerBtnLblMouseExited

    private void registerBtnLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerBtnLblMouseClicked
        // TODO add your handling code here:
        addUser();
    }//GEN-LAST:event_registerBtnLblMouseClicked

    private void hidePasswordLblBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hidePasswordLblBtnMouseClicked
        // TODO add your handling code here:
        func.mouseClicked(hidePasswordLblBtn, passwordTxt);
    }//GEN-LAST:event_hidePasswordLblBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserRegistration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.zx.shopmanagementsystem.components.RoundedText fullNameTxt;
    private com.zx.shopmanagementsystem.components.Head head1;
    private javax.swing.JLabel hidePasswordLblBtn;
    private javax.swing.JLabel iconLbl;
    private javax.swing.JLabel jLabel1;
    private com.zx.shopmanagementsystem.components.RoundedPassword passwordTxt;
    private javax.swing.JLabel profileImageLbl;
    private javax.swing.JLabel profilePicBtn;
    private javax.swing.JLabel registerBtnLbl;
    private javax.swing.JComboBox<String> userRoleCombo;
    private com.zx.shopmanagementsystem.components.RoundedText usernameTxt1;
    // End of variables declaration//GEN-END:variables

    private void addUser() {
        String Username = usernameTxt1.getText();
        String Password = passwordTxt.getText();
        String fullName = fullNameTxt.getText();
        String userRole = userRoleCombo.getSelectedItem().toString();

        try {
            if (file != null) {
                profilePicture = new FileInputStream(file);
                System.out.println("Profile Picture Selected");
            } else {
                System.out.println("File Empty");
                profilePicture = new FileInputStream(new File(path));
            }

        } catch (FileNotFoundException ex) {
            System.out.println("Add User Function Image Selection : " + ex.getMessage());

        }
        if (Username.equals("")) {
            System.out.println("User Name Empty");
            notification.showDialogBox("WARNING", "User Name Empty", "2");
        } else if (Password.equals("")) {
            System.out.println("Password Empty");
            notification.showDialogBox("WARNING", "Password Empty", "2");
        } else if (fullName.equals("")) {
            System.out.println("Full Name Empty");
            notification.showDialogBox("WARNING", "Full Name Empty", "2");
        } else if (userRole.equals("Select Role")) {
            System.out.println("Select User Role");
            notification.showDialogBox("WARNING", "Select a User Role", "2");
        } else if (usernameChecker(Username)) {
            System.out.println("User name exsist");
            notification.showDialogBox("ERROR", "User name exsist", "3");
        } else {
            try {
                ResultSet rs = DB.getdata("SELECT role_id FROM user_role WHERE role_name = '" + userRole + "'");
                if (rs.next()) {
                    while (true) {
                        userRoleId = rs.getInt("role_id");
                        DB.putdata("INSERT INTO user (user_name, password, full_name, profile_pic, user_role_id) VALUES ('" + Username + "','" + Password + "','" + fullName + "','" + profilePicture + "','" + userRoleId + "')");
                        System.out.println("Data Written");
                        break;
                    }
                }
            } catch (Exception ex) {
                Logger.getLogger(UserRegistration.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    private void comboLoader() {
        userRoleCombo.addItem("Select Role");
        try {
            java.sql.ResultSet rs = DB.getdata("SELECT * FROM user_role");
            while (rs.next()) {
                String userRole = rs.getString("role_name");
                userRoleCombo.addItem(userRole);
            }
        } catch (Exception ex) {
            Logger.getLogger(CustomerRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private boolean usernameChecker(String username) {
        try {
            ResultSet rs = DB.getdata("SELECT * FROM user");
            if (rs.next()) {
                while (true) {
                    String dbusername = rs.getString("user_name");
                    return username.equals(dbusername);
                }
            } else {
                return false;
            }
        } catch (Exception ex) {
            Logger.getLogger(UserRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }

}
