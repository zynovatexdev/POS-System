/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.zx.shopmanagementsystem.ui;

import com.zx.shopmanagementsystem.assests.Func;
import com.zx.shopmanagementsystem.assests.IconLocation;
import com.zx.shopmanagementsystem.dateChooser.SelectedDate;
import com.zx.shopmanagementsystem.dbconnection.JDBC;
import com.zx.shopmanagementsystem.notifications.MessageDialog;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.ServerSocket;
import java.net.Socket;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author User
 */
public class AddDiscount extends javax.swing.JFrame {

    /**
     * Creates new form AddBarcode
     */
    Func func = new Func();
    IconLocation il = new IconLocation();
    JDBC DB = new JDBC();

    int maxDisId;
    int newDisId;

    public AddDiscount() {
        initComponents();
        getMaxValue();
        head1.setFrame(this);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        date1 = new com.zx.shopmanagementsystem.dateChooser.DateChooser();
        date2 = new com.zx.shopmanagementsystem.dateChooser.DateChooser();
        endPopLbl = new javax.swing.JLabel();
        startPopLbl = new javax.swing.JLabel();
        head1 = new com.zx.shopmanagementsystem.components.Head();
        addDiscountBtnLbl = new javax.swing.JLabel();
        endDateTxt = new com.zx.shopmanagementsystem.components.RoundedText();
        stratDateTxt = new com.zx.shopmanagementsystem.components.RoundedText();
        discountTxt = new com.zx.shopmanagementsystem.components.RoundedText();
        iconLbl = new javax.swing.JLabel();

        date1.setForeground(new java.awt.Color(204, 51, 255));
        date1.setDateFormat("yyyy-MM-dd");
        date1.setTextRefernce(stratDateTxt);

        date2.setForeground(new java.awt.Color(204, 51, 255));
        date2.setDateFormat("yyyy-MM-dd");
        date2.setTextRefernce(endDateTxt);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        endPopLbl.setIcon(new javax.swing.ImageIcon("C:\\ShopManagementSystem\\src\\main\\java\\com\\zx\\shopmanagementsystem\\icons\\CalenderIcon.png")); // NOI18N
        endPopLbl.setPreferredSize(new java.awt.Dimension(33, 33));
        endPopLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                endPopLblMouseClicked(evt);
            }
        });
        getContentPane().add(endPopLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 280, -1, -1));

        startPopLbl.setIcon(new javax.swing.ImageIcon("C:\\ShopManagementSystem\\src\\main\\java\\com\\zx\\shopmanagementsystem\\icons\\CalenderIcon.png")); // NOI18N
        startPopLbl.setPreferredSize(new java.awt.Dimension(33, 33));
        startPopLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startPopLblMouseClicked(evt);
            }
        });
        getContentPane().add(startPopLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1140, 180, -1, -1));

        head1.setHeaderTextColor("#000000");
        head1.setHeaderTitle("");
        head1.setOpaque(false);
        getContentPane().add(head1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, -1));

        addDiscountBtnLbl.setIcon(new javax.swing.ImageIcon("C:\\ShopManagementSystem\\src\\main\\java\\com\\zx\\shopmanagementsystem\\icons\\AddPurpleIcon.png")); // NOI18N
        addDiscountBtnLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addDiscountBtnLblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addDiscountBtnLblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addDiscountBtnLblMouseExited(evt);
            }
        });
        getContentPane().add(addDiscountBtnLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(735, 460, -1, -1));

        endDateTxt.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        endDateTxt.setHintText("Enter End Date");
        endDateTxt.setPreferredSize(new java.awt.Dimension(129, 40));
        endDateTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                endDateTxtActionPerformed(evt);
            }
        });
        getContentPane().add(endDateTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 270, 460, 50));

        stratDateTxt.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        stratDateTxt.setHintText("Enter Strat Date");
        stratDateTxt.setPreferredSize(new java.awt.Dimension(129, 40));
        stratDateTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stratDateTxtActionPerformed(evt);
            }
        });
        getContentPane().add(stratDateTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 170, 460, 50));

        discountTxt.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        discountTxt.setHintText("Enter End Date");
        discountTxt.setPreferredSize(new java.awt.Dimension(129, 40));
        discountTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountTxtActionPerformed(evt);
            }
        });
        getContentPane().add(discountTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 370, 460, 50));

        iconLbl.setIcon(new javax.swing.ImageIcon("C:\\ShopManagementSystem\\src\\main\\java\\com\\zx\\shopmanagementsystem\\images\\Add_Discount.png")); // NOI18N
        getContentPane().add(iconLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addDiscountBtnLblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addDiscountBtnLblMouseEntered
        // TODO add your handling code here:
        func.iconSetter(addDiscountBtnLbl, il.addWhiteIcon);
    }//GEN-LAST:event_addDiscountBtnLblMouseEntered

    private void addDiscountBtnLblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addDiscountBtnLblMouseExited
        // TODO add your handling code here:
        func.iconSetter(addDiscountBtnLbl, il.addPurpleIcon);
    }//GEN-LAST:event_addDiscountBtnLblMouseExited

    private void addDiscountBtnLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addDiscountBtnLblMouseClicked
        // TODO add your handling code here:
        addDiscount();
    }//GEN-LAST:event_addDiscountBtnLblMouseClicked

    private void endDateTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_endDateTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_endDateTxtActionPerformed

    private void stratDateTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stratDateTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stratDateTxtActionPerformed

    private void discountTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_discountTxtActionPerformed

    private void startPopLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startPopLblMouseClicked
        // TODO add your handling code here:
        date1.showPopup();
    }//GEN-LAST:event_startPopLblMouseClicked

    private void endPopLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_endPopLblMouseClicked
        // TODO add your handling code here:
        date2.showPopup();
    }//GEN-LAST:event_endPopLblMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddDiscount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddDiscount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddDiscount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddDiscount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddDiscount().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addDiscountBtnLbl;
    private com.zx.shopmanagementsystem.dateChooser.DateChooser date1;
    private com.zx.shopmanagementsystem.dateChooser.DateChooser date2;
    private com.zx.shopmanagementsystem.components.RoundedText discountTxt;
    private com.zx.shopmanagementsystem.components.RoundedText endDateTxt;
    private javax.swing.JLabel endPopLbl;
    private com.zx.shopmanagementsystem.components.Head head1;
    private javax.swing.JLabel iconLbl;
    private javax.swing.JLabel startPopLbl;
    private com.zx.shopmanagementsystem.components.RoundedText stratDateTxt;
    // End of variables declaration//GEN-END:variables

    private void addDiscount() {
        MessageDialog DialogBox = new MessageDialog(this);
        if (stratDateTxt.getText().equals("")) {
            System.out.println("Start Date Empty");
            DialogBox.showMessage("WARNING", "Start Date Text Empty", 2);
        } else if (endDateTxt.getText().equals("")) {
            System.out.println("End Date Empty");
            DialogBox.showMessage("WARNING", "End Date Text Empty", 2);
        } else if (discountTxt.getText().equals("")) {
            System.out.println("Discount Empty");
            DialogBox.showMessage("WARNING", "Discount Text Empty", 2);
        } else {
            String startDate = stratDateTxt.getText();
            String endDate = endDateTxt.getText();
            String presentage = discountTxt.getText();
            //System.out.println("Start : " + startDate + " End Date : " + endDate);
            if (func.dateValidator(startDate) == 2) {
                System.out.println("Please Select a Valid Date");
                DialogBox.showMessage("ERROR", "Select Start Date :\n" + LocalDate.now().plusDays(1) + " or After.", 2);
            } else if (func.dateValidator(endDate) == 2) {
                System.out.println("Please Select a Valid Date");
                DialogBox.showMessage("ERROR", "Select End Date :\n" + LocalDate.now().plusDays(2) + " or After.", 2);
            } else if (dateRange(startDate, endDate)) {
                System.out.println("Date Range Not Valid");
                DialogBox.showMessage("ERROR", "End date is before the start date. \nInvalid date range.", 3);
            } else {
                try {
                    DB.putdata("INSERT INTO discont (discount_id, start_date, end_date, discount_presentage) VALUES ('" + newDisId + "', '" + startDate + "', '" + endDate + "', '" + presentage + "')");
                    getMaxValue();
                } catch (Exception ex) {
                    System.out.println("Add discount : " + ex.getMessage());
                }
                DialogBox.showMessage("Done", "Discount Added", 1);
                stratDateTxt.setText("");
                endDateTxt.setText("");
                discountTxt.setText("");
            }

        }
    }

    private void getMaxValue() {
        try {
            java.sql.ResultSet rs1 = DB.getdata("SELECT MAX(discount_id) FROM discont");
            if (rs1.next()) {
                //System.out.println("Table not empty");
                maxDisId = rs1.getInt("max(discount_id)");
                //System.out.println(maxCusId);
                //customerIdLbl.setText(String.valueOf(maxDisId + 1));
                newId(maxDisId);
            } else {
                System.out.println("Table Empty");
            }
        } catch (Exception ex) {
            System.out.println("Get max Value : " + ex.getMessage());
        }
    }

    private void newId(int maxValue) {
        newDisId = maxValue + 1;
    }

    private boolean dateRange(String startingDate, String endingDate) {
        String startDateString = startingDate;
        String endDateString = endingDate;
        boolean op = false;

        // Define the date format
        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");

        try {
            // Parse the date strings into LocalDate objects
            LocalDate startDate = LocalDate.parse(startDateString, dateFormatter);
            LocalDate endDate = LocalDate.parse(endDateString, dateFormatter);

            // Check if the start date is before or equal to the end date
            if (startDate.isBefore(endDate)) {
                System.out.println("Date range is valid.");
                op = false;
            } else {
                System.out.println("End date is before the start date. Invalid date range.");
                op = true;
            }
        } catch (Exception e) {
            System.out.println("Invalid date format. Please use 'yyyy-MM-dd' format.");
        }
        return op;
    }
}
