/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.zx.shopmanagementsystem.ui;

import com.zx.shopmanagementsystem.assests.Func;
import com.zx.shopmanagementsystem.assests.IconLocation;
import com.zx.shopmanagementsystem.components.ScrollBarCustom;
import com.zx.shopmanagementsystem.dbconnection.JDBC;
import com.zx.shopmanagementsystem.forms.CustomerManagement;
import com.zx.shopmanagementsystem.notifications.ConfirmDialog;
import com.zx.shopmanagementsystem.notifications.MessageDialog;
import java.awt.Toolkit;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author User
 */
public class CustomerRegistration extends javax.swing.JFrame {

    /**
     * Creates new form CustomerRegistration
     */
    int maxCusId;
    int newCusId;
    private CustomerManagement cm;

    JDBC DB = new JDBC();
    Func func = new Func();
    IconLocation il = new IconLocation();

    public CustomerRegistration(CustomerManagement cm) {
        this.cm = cm;
        initComponents();
        jScrollPane1.setVerticalScrollBar(new ScrollBarCustom());
        setIconImage(Toolkit.getDefaultToolkit().getImage(il.logo));
        head1.setFrame(CustomerRegistration.this);
        getMaxValue();
        comboLoader();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        head1 = new com.zx.shopmanagementsystem.components.Head();
        customerNameTxt = new com.zx.shopmanagementsystem.components.RoundedText();
        customerNumberTxt = new com.zx.shopmanagementsystem.components.RoundedText();
        updateBtn = new javax.swing.JLabel();
        customerIdLbl = new javax.swing.JLabel();
        customerCategoryCombo = new com.zx.shopmanagementsystem.components.ComboBoxSuggestion();
        panelBorder1 = new com.raven.swing.PanelBorder();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerAddressTxt = new javax.swing.JTextArea();
        iconLable = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        head1.setFrame(null);
        head1.setHeaderTitle("");
        head1.setOpaque(false);
        getContentPane().add(head1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, -1));

        customerNameTxt.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        customerNameTxt.setHintText("Enter Customer Name");
        getContentPane().add(customerNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 440, 480, 50));

        customerNumberTxt.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        customerNumberTxt.setHintText("Enter Customer Number");
        getContentPane().add(customerNumberTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 290, 280, 50));

        updateBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateBtnMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updateBtnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updateBtnMouseExited(evt);
            }
        });
        getContentPane().add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 600, 200, 50));

        customerIdLbl.setFont(new java.awt.Font("Noto Sans", 1, 18)); // NOI18N
        getContentPane().add(customerIdLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 190, 150, 30));

        customerCategoryCombo.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        customerCategoryCombo.setPreferredSize(new java.awt.Dimension(163, 50));
        getContentPane().add(customerCategoryCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 230, 260, -1));

        panelBorder1.setBackground(new java.awt.Color(255, 255, 255));

        customerAddressTxt.setColumns(20);
        customerAddressTxt.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        customerAddressTxt.setRows(5);
        customerAddressTxt.setSelectionColor(new java.awt.Color(80, 199, 255));
        jScrollPane1.setViewportView(customerAddressTxt);
        customerAddressTxt.getAccessibleContext().setAccessibleName("");
        customerAddressTxt.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout panelBorder1Layout = new javax.swing.GroupLayout(panelBorder1);
        panelBorder1.setLayout(panelBorder1Layout);
        panelBorder1Layout.setHorizontalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 480, Short.MAX_VALUE)
            .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelBorder1Layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        panelBorder1Layout.setVerticalGroup(
            panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 160, Short.MAX_VALUE)
            .addGroup(panelBorder1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelBorder1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        getContentPane().add(panelBorder1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 400, 480, 160));

        iconLable.setIcon(new javax.swing.ImageIcon("C:\\ShopManagementSystem\\src\\main\\java\\com\\zx\\shopmanagementsystem\\images\\Customer_Registration.png")); // NOI18N
        getContentPane().add(iconLable, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void updateBtnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateBtnMouseEntered
        // TODO add your handling code here:

    }//GEN-LAST:event_updateBtnMouseEntered

    private void updateBtnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateBtnMouseExited
        // TODO add your handling code here:

    }//GEN-LAST:event_updateBtnMouseExited

    private void updateBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateBtnMouseClicked
        // TODO add your handling code here:
        addCustomer();
        cm.setTable();
    }//GEN-LAST:event_updateBtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        CustomerManagement cm = new CustomerManagement();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CustomerRegistration cr = new CustomerRegistration(cm);
                cr.setVisible(true);
            }
        });
    }

    private void comboLoader() {
        try {
            java.sql.ResultSet rs = DB.getdata("SELECT * FROM customer_category");
            customerCategoryCombo.addItem("Select Category");
            while (rs.next()) {
                String customerCategory = rs.getString("customer_type");
                customerCategoryCombo.addItem(customerCategory);
            }
        } catch (Exception ex) {
            Logger.getLogger(CustomerRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getMaxValue() {
        try {
            java.sql.ResultSet rs1 = DB.getdata("SELECT MAX(customer_id) FROM customer");
            if (rs1.next()) {
                //System.out.println("Table not empty");
                maxCusId = rs1.getInt("max(customer_id)");
                //System.out.println(maxCusId);
                customerIdLbl.setText(String.valueOf(maxCusId + 1));
                newId(maxCusId);
            } else {
                System.out.println("Table Empty");
            }
        } catch (Exception ex) {
            Logger.getLogger(CustomerRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void newId(int maxValue) {
        newCusId = maxValue + 1;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea customerAddressTxt;
    private com.zx.shopmanagementsystem.components.ComboBoxSuggestion customerCategoryCombo;
    private javax.swing.JLabel customerIdLbl;
    private com.zx.shopmanagementsystem.components.RoundedText customerNameTxt;
    private com.zx.shopmanagementsystem.components.RoundedText customerNumberTxt;
    private com.zx.shopmanagementsystem.components.Head head1;
    private javax.swing.JLabel iconLable;
    private javax.swing.JScrollPane jScrollPane1;
    private com.raven.swing.PanelBorder panelBorder1;
    private javax.swing.JLabel updateBtn;
    // End of variables declaration//GEN-END:variables

    private void addCustomer() {
        MessageDialog dialogBox = new MessageDialog(this);
        String customerName = customerNameTxt.getText();
        String customerNumber = customerNumberTxt.getText();
        String customerAddress = customerAddressTxt.getText();
        String customerCategory = (String) customerCategoryCombo.getSelectedItem();

        //System.out.println(newCusId + " " + customerName + " " + customerNumber + " " + customerAddress + " " + customerCategory);
        if (customerName.equals("")) {
            dialogBox.showMessage("WARNING", "Customer Name Empty", 2);
            System.out.println("Customer Name Empty");
            //JOptionPane.showMessageDialog(null, "Customer Name Empty", "WARNING", JOptionPane.WARNING_MESSAGE);
        } else if (customerNumber.equals("")) {
            System.out.println("Customer Number Empty");
            dialogBox.showMessage("WARNING", "Customer Number Empty", 2);
            //JOptionPane.showMessageDialog(null, "Customer Number Empty", "WARNING", JOptionPane.WARNING_MESSAGE);
        } else if (customerAddress.equals("")) {
            System.out.println("Customer Address Empty");
            dialogBox.showMessage("WARNING", "Customer Address Empty", 2);
            //JOptionPane.showMessageDialog(null, "Customer Address Empty", "WARNING", JOptionPane.WARNING_MESSAGE);
        } else if (customerCategory.equals("Select Category")) {
            dialogBox.showMessage("WARNING", "Select Customer Category", 2);
            System.out.println("Select Customer Category");
            //JOptionPane.showMessageDialog(null, "Select a Customer Category", "WARNING", JOptionPane.WARNING_MESSAGE);
        } else {
            if (Func.isValidMobileNumber(customerNumber)) {
                System.out.println("number valid");
                ConfirmDialog confrim = new ConfirmDialog(this);
                confrim.showMessage("Register", "Do you want to Register ?");
                if (confrim.getMessageType() == ConfirmDialog.MessageType.YES) {
                    System.out.println("Yes");
                    try {
                        java.sql.ResultSet rs = DB.getdata("SELECT * FROM customer_category WHERE customer_type = '" + customerCategory + "'");
                        while (rs.next()) {
                            int customerCategoryId = rs.getInt("customer_category_id");
                            DB.putdata("INSERT INTO customer (customer_id, customer_name, customer_address, customer_phone, category_id) VALUES ('" + newCusId + "','" + customerName + "','" + customerAddress + "','" + customerNumber + "','" + customerCategoryId + "')");
                            System.out.println("Data Written");
                            dialogBox.showMessage("Done", "Customer Saved", 1);
                            //JOptionPane.showMessageDialog(null, "Saved", "Saved Customer", JOptionPane.PLAIN_MESSAGE);
                            getMaxValue();
                            //System.out.println(maxCusId);
                            clearText();

                        }
                    } catch (Exception e) {
                        System.out.println("Customer Registration Add Customer Function" + e);
                    }
                } else {
                    System.out.println("No");
                }

            } else {
                System.out.println("number not valid");
                dialogBox.showMessage("WARNING", "Number Not Valid", 2);
                //JOptionPane.showMessageDialog(null, "Number Not Valid", "WARNING", JOptionPane.ERROR_MESSAGE);
            }
        }

    }

    private void clearText() {
        customerIdLbl.setText(String.valueOf(newCusId));
        customerNameTxt.setText("");
        customerNumberTxt.setText("");
        customerAddressTxt.setText("");
        customerCategoryCombo.setSelectedIndex(0);
    }
}
