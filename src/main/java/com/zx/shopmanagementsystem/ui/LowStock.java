/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.zx.shopmanagementsystem.ui;

import com.zx.shopmanagementsystem.assests.IconLocation;
import com.zx.shopmanagementsystem.dbconnection.JDBC;
import com.zx.shopmanagementsystem.forms.CustomerManagement;
import com.zx.shopmanagementsystem.table.TableCustom;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class LowStock extends javax.swing.JFrame {

    /**
     * Creates new form LowStock
     */
    JDBC DB = new JDBC();
    IconLocation il = new IconLocation();
    private int period;

    public LowStock() {
        initComponents();
        jsonRead();
        System.out.println(period);
        tableDataClear();
        tableDataLoader();
        setIconImage(Toolkit.getDefaultToolkit().getImage(il.logo));
        TableCustom.apply(jScrollPane1, TableCustom.TableType.MULTI_LINE);
        head1.setFrame(this);
// Add a DocumentListener to the searchTxt
        searchTxt.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {
            @Override
            public void insertUpdate(javax.swing.event.DocumentEvent e) {
                try {
                    // Call your method to handle the text update
                    handleSearchTextUpdate();
                } catch (Exception ex) {
                    Logger.getLogger(CustomerManagement.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            @Override
            public void removeUpdate(javax.swing.event.DocumentEvent e) {
                try {
                    // Call your method to handle the text update
                    handleSearchTextUpdate();
                } catch (Exception ex) {
                    Logger.getLogger(CustomerManagement.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            @Override
            public void changedUpdate(javax.swing.event.DocumentEvent e) {
                try {
                    // Call your method to handle the text update
                    handleSearchTextUpdate();
                } catch (Exception ex) {
                    Logger.getLogger(CustomerManagement.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        head1 = new com.zx.shopmanagementsystem.components.Head();
        searchTxt = new com.zx.shopmanagementsystem.components.RoundedText();
        jScrollPane1 = new javax.swing.JScrollPane();
        lowStockTbl = new javax.swing.JTable();
        scannerBtnLbl = new javax.swing.JLabel();
        iconLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        head1.setHeaderTitle("");
        head1.setOpaque(false);
        getContentPane().add(head1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, -1));

        searchTxt.setFont(new java.awt.Font("Poppins SemiBold", 1, 13)); // NOI18N
        searchTxt.setHintText("Product Name, Barcode or QR");
        getContentPane().add(searchTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 48, 320, 40));

        lowStockTbl.setFont(new java.awt.Font("Poppins SemiBold", 1, 13)); // NOI18N
        lowStockTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No", "Product Name", "Available Quantity", "Store Location"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(lowStockTbl);
        if (lowStockTbl.getColumnModel().getColumnCount() > 0) {
            lowStockTbl.getColumnModel().getColumn(0).setPreferredWidth(5);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, 1180, 520));

        scannerBtnLbl.setForeground(new java.awt.Color(255, 255, 255));
        scannerBtnLbl.setText("Scan");
        scannerBtnLbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                scannerBtnLblMouseClicked(evt);
            }
        });
        getContentPane().add(scannerBtnLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 50, 50, 30));

        iconLbl.setIcon(new javax.swing.ImageIcon("C:\\ShopManagementSystem\\src\\main\\java\\com\\zx\\shopmanagementsystem\\images\\All Low Stocks.png")); // NOI18N
        getContentPane().add(iconLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void scannerBtnLblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_scannerBtnLblMouseClicked
        // TODO add your handling code here:
        try {
            String pythonScript = "C:\\ShopManagementSystem\\src\\main\\java\\com\\zx\\shopmanagementsystem\\barcode_Python\\abcCopy.py";
            Process process = Runtime.getRuntime().exec("python " + pythonScript);

            InputStream inputStream = process.getInputStream();
            BufferedReader reader = new BufferedReader(new InputStreamReader(inputStream));
            String line;
            String prv = "";

            while ((line = reader.readLine()) != null) {
                if (line.equals(prv)) {
                    System.out.println("Same Value");
                } else if (line.equals("Done")) {
                    System.out.println("Done");
                } else if (line.startsWith("QRCODE")) {
                    System.out.println("it is a QR");
                    //jsonRead2(line.substring(6));  // Remove "QRCODE" prefix and update text
                } else {
                    System.out.println("it is not a QR");
                    searchTxt.setText(line);
                }
                prv = line;
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_scannerBtnLblMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LowStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LowStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LowStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LowStock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LowStock().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.zx.shopmanagementsystem.components.Head head1;
    private javax.swing.JLabel iconLbl;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable lowStockTbl;
    private javax.swing.JLabel scannerBtnLbl;
    private com.zx.shopmanagementsystem.components.RoundedText searchTxt;
    // End of variables declaration//GEN-END:variables

    private void tableDataLoader() {
        try {
            String sql = "SELECT p.product_name, p.stock_quantity, s.store_location_name\n"
                    + "FROM shopdb.product p\n"
                    + "JOIN shopdb.store_location s ON p.store_location_id = s.store_location_id\n"
                    + "WHERE p.stock_quantity <= " + period + "";

            java.sql.ResultSet rs = DB.getdata(sql);
            while (rs.next()) {
                String product_name = String.valueOf(rs.getString("product_name"));
                String stock_quantity = String.valueOf(rs.getString("stock_quantity"));
                String store_location_name = String.valueOf(rs.getString("store_location_name"));

                DefaultTableModel table = (DefaultTableModel) lowStockTbl.getModel();
                table.addRow(new Object[]{table.getRowCount() + 1, product_name, stock_quantity, store_location_name});

            }
            DB.con().close();
        } catch (Exception ex) {
            System.out.println("Expire Date Table Data Loader : " + ex);
        }
    }

    private void tableDataClear() {
        try {
            while (0 <= lowStockTbl.getRowCount()) {
                DefaultTableModel table = (DefaultTableModel) lowStockTbl.getModel();
                table.removeRow(lowStockTbl.getRowCount() - 1);
            }
        } catch (Exception e) {
            System.out.println("Expire Date Table Data Clear : " + e);
        }
    }

    private void jsonRead() {
        Properties properties = new Properties();
        try (FileInputStream fileInputStream = new FileInputStream("Settings.properties")) {
            properties.load(fileInputStream);
            System.out.println("Settings loaded successfully.");

            // Access individual properties
            period = Integer.parseInt((properties.getProperty("LowStockAlert")));
            System.out.println(period);
        } catch (Exception en) {
            System.err.println("Home Admin LowStockAlert : " + en);
        }
    }

    private void handleSearchTextUpdate() throws Exception {
        if (searchTxt.getText().equals("")) {
            tableDataClear();
            tableDataLoader();
        } else {
            tableDataClear();
            String sql = "SELECT p.product_name, p.stock_quantity, s.store_location_name\n"
                    + "FROM shopdb.product p\n"
                    + "JOIN shopdb.store_location s ON p.store_location_id = s.store_location_id\n"
                    + "JOIN shopdb.barcode b ON p.barcode_id = b.barcode_id\n"
                    + "WHERE p.stock_quantity <= ? AND p.product_name LIKE ? OR b.barcode_value = ?;";

            try (PreparedStatement preparedStatement = DB.con().prepareStatement(sql)) {

                preparedStatement.setInt(1, period);
                preparedStatement.setString(2, searchTxt.getText() + "%");
                preparedStatement.setString(3, searchTxt.getText());

                ResultSet rs = preparedStatement.executeQuery();

                // Process the resultSet as needed
                while (rs.next()) {
                    String product_name = String.valueOf(rs.getString("product_name"));
                    String stock_quantity = String.valueOf(rs.getString("stock_quantity"));
                    String store_location_name = String.valueOf(rs.getString("store_location_name"));

                    DefaultTableModel table = (DefaultTableModel) lowStockTbl.getModel();
                    table.addRow(new Object[]{table.getRowCount() + 1, product_name, stock_quantity, store_location_name});

                }
            } catch (Exception ex) {
                System.out.println("Expire Date Table Data Loader : " + ex);
            }

        }

    }

    private void jsonRead2(String substring) {

    }
}
